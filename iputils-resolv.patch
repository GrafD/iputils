diff -urN iputils.org/tracepath.c iputils/tracepath.c
--- iputils.org/tracepath.c	Fri Nov  3 22:10:18 2000
+++ iputils/tracepath.c	Fri Nov  3 22:10:50 2000
@@ -38,6 +38,7 @@
 int mtu = 65535;
 int hops_to = -1;
 int hops_from = -1;
+int no_resolve = 0;
 
 struct probehdr
 {
@@ -135,14 +136,23 @@
 		printf("%2d?: %-16s ", ttl, "[LOCALHOST]");
 	} else if (e->ee_origin == SO_EE_ORIGIN_ICMP) {
 		char abuf[128];
+		struct hostent *h;
 		struct sockaddr_in *sin = (struct sockaddr_in*)(e+1);
 
 		inet_ntop(AF_INET, &sin->sin_addr, abuf, sizeof(abuf));
 
-		if (sndhops>0)
-			printf("%2d:  %-16s ", sndhops, abuf);
-		else
-			printf("%2d?: %-16s ", ttl, abuf);
+		if(!no_resolve) {
+		h = gethostbyaddr((char *) &sin->sin_addr, sizeof(sin->sin_addr), AF_INET);
+			if (sndhops>0)
+				printf("%2d:  %-s  (%-s) ", sndhops, h ? h->h_name : abuf, abuf);
+			else
+				printf("%2d?: %-s  (%-s) ", ttl, h ? h->h_name : abuf, abuf);
+		} else {
+			if (sndhops>0)
+				printf("%2d: %-s ", sndhops, abuf);
+			else
+				printf("%2d?: %-s ", ttl, abuf);
+		} /* resolve */
 	}
 
 	if (rethops>=0) {
@@ -256,8 +266,8 @@
 	int ttl;
 	char *p;
 
-	if (argc != 2) {
-		fprintf(stderr, "tracepath <destination>[/<port>]\n");
+	if (argc < 2) {
+		fprintf(stderr, "tracepath [-n] <destination>[/<port>]\n");
 		exit(-1);
 	}
 
@@ -267,6 +277,10 @@
 		exit(1);
 	}
 	target.sin_family = AF_INET;
+	if (!strcmp(argv[1], "-n")) {
+		no_resolve = 1;
+		argv++; argc--;
+	}
 	p = strchr(argv[1], '/');
 	if (p) {
 		*p = 0;
diff -urN iputils.org/tracepath6.c iputils/tracepath6.c
--- iputils.org/tracepath6.c	Fri Nov  3 22:10:18 2000
+++ iputils/tracepath6.c	Fri Nov  3 22:29:28 2000
@@ -29,6 +29,8 @@
 int mtu = 128000;
 int hops_to = -1;
 int hops_from = -1;
+int no_resolve = 0;
+int show_both = 0;
 int mapped;
 
 struct probehdr
@@ -126,16 +128,29 @@
 		printf("%-32s ", "[LOCALHOST]");
 	else if (e->ee_origin == SO_EE_ORIGIN_ICMP6 ||
 		 e->ee_origin == SO_EE_ORIGIN_ICMP) {
-		char abuf[128];
-		struct sockaddr_in6 *sin6 = (struct sockaddr_in6*)(e+1);
-		struct sockaddr_in *sin = (struct sockaddr_in*)(e+1);
+		char hbuf[128], ipbuf[128];
+		struct sock_extended_err *ss = (struct sock_extended_err*)(e+1);
 
-		if (sin->sin_family == AF_INET6)
-			inet_ntop(AF_INET6, &sin6->sin6_addr, abuf, sizeof(abuf));
-		else
-			inet_ntop(AF_INET, &sin->sin_addr, abuf, sizeof(abuf));
-
-		printf("%-32s ", abuf);
+		getnameinfo((struct sockaddr *)ss,
+#ifdef SA_LEN
+				SA_LEN((struct sockaddr *)ss),
+#else
+				sizeof(struct sockaddr_in6),
+#endif
+					hbuf, sizeof(hbuf), NULL, 0,
+					no_resolve ? NI_NUMERICHOST : 0);
+		printf("%-32s ", hbuf);
+		if (show_both && !no_resolve) {
+			getnameinfo((struct sockaddr *)ss,
+#ifdef SA_LEN
+					SA_LEN((struct sockaddr *)ss),
+#else
+					sizeof(struct sockaddr_in6),
+#endif
+					ipbuf, sizeof(ipbuf), NULL, 0,
+					NI_NUMERICHOST);
+		printf("%-32s ", ipbuf);
+		}
 	}
 
 	if (rethops>=0) {
@@ -252,7 +267,7 @@
 	struct hostent *he;
 
 	if (argc < 2) {
-		fprintf(stderr, "tracepath6 <address>[/<port>]\n");
+		fprintf(stderr, "tracepath6 [-n] [-b] <address>[/<port>]\n");
 		exit(-1);
 	}
 
@@ -262,6 +277,14 @@
 		exit(1);
 	}
 	sin.sin6_family = AF_INET6;
+	if (!strcmp(argv[1], "-n")) {
+		no_resolve = 1;
+		argv++; argc--;
+	}
+	if (!strcmp(argv[1], "-b")) {
+		show_both = 1;
+		argv++; argc--;
+	}
 	p = strchr(argv[1], '/');
 	if (p) {
 		*p = 0;
